// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package netprog.uebung01.a1_2;

public final class GruppenlisteImpl_Stub
    extends java.rmi.server.RemoteStub
    implements netprog.uebung01.a1_2.Gruppenliste, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("void loesche(int)"),
	new java.rmi.server.Operation("java.lang.String toString(int)[]"),
	new java.rmi.server.Operation("void trageEin(int, java.lang.String, java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = 5367722847421550272L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_loesche_0;
    private static java.lang.reflect.Method $method_toString_1;
    private static java.lang.reflect.Method $method_trageEin_2;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_loesche_0 = netprog.uebung01.a1_2.Gruppenliste.class.getMethod("loesche", new java.lang.Class[] {int.class});
	    $method_toString_1 = netprog.uebung01.a1_2.Gruppenliste.class.getMethod("toString", new java.lang.Class[] {int.class});
	    $method_trageEin_2 = netprog.uebung01.a1_2.Gruppenliste.class.getMethod("trageEin", new java.lang.Class[] {int.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public GruppenlisteImpl_Stub() {
	super();
    }
    public GruppenlisteImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of loesche(int)
    public void loesche(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_loesche_0, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 3628411346883113487L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeInt($param_int_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of toString(int)
    public java.lang.String[] toString(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_toString_1, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, -1277871554222624186L);
		return ((java.lang.String[]) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeInt($param_int_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		java.lang.String[] $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (java.lang.String[]) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of trageEin(int, String, String, String)
    public void trageEin(int $param_int_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_trageEin_2, new java.lang.Object[] {new java.lang.Integer($param_int_1), $param_String_2, $param_String_3, $param_String_4}, 949364721650526596L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeInt($param_int_1);
		    out.writeObject($param_String_2);
		    out.writeObject($param_String_3);
		    out.writeObject($param_String_4);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
